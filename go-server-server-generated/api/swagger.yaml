openapi: 3.0.0
info:
  title: Stacked Books API
  description: これはStacked BooksのAPI定義です。
  version: 1.0.0
servers:
- url: /
paths:
  /signup:
    post:
      tags:
      - 認証
      summary: 会員登録
      requestBody:
        description: 会員登録に必要なUserのデータを送信
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/SignUpForm'
        required: true
      responses:
        "200":
          description: 会員登録成功時のレスポンス
          content:
            application/json:
              schema:
                $ref: '#/components/responses/SignInResponse'
  /signin:
    post:
      tags:
      - 認証
      summary: ログイン
      requestBody:
        description: ログインに必要なUserのデータを送信
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/SignInForm'
        required: true
      responses:
        "200":
          description: ログイン成功時のレスポンス
          content:
            application/json:
              schema:
                $ref: '#/components/responses/SignInResponse'
  /books/search:
    post:
      tags:
      - 本の検索
      summary: 本の登録
      parameters:
      - name: word
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: 書籍検索時のレスポンス
          content:
            application/json:
              schema:
                $ref: '#/components/responses/GoogleBooksAPIResponse'
  /books:
    post:
      tags:
      - 本のCRUD
      summary: 本の登録
      parameters: []
      responses:
        "200":
          description: 本の登録成功時のレスポンス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
  /users/{userId}/books:
    get:
      tags:
      - 本のCRUD
      summary: 特定ユーザーの本の一覧を取得
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          description: ユーザーのID
          format: int64
      responses:
        "200":
          description: 特定ユーザーの本の一覧を取得したときのレスポンス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
  /userbooks/value:
    post:
      tags:
      - 本のCRUD
      summary: 読書量を表示
      parameters: []
      responses:
        "200":
          description: 読書量を表示した時のレスポンス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/'
components:
  schemas:
    User:
      required:
      - email
      - id
      - name
      - password
      - role
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: 山田太郎
        email:
          type: string
          example: test@example.jp
        password:
          type: string
          example: password
        avatar:
          type: string
        role:
          type: string
          enum:
          - general
          - admin
    UserBook:
      required:
      - book_id
      - status
      - user_id
      type: object
      properties:
        user_id:
          type: integer
          format: int64
          example: 1
        book_id:
          type: integer
          format: int64
          example: 1
        status:
          type: string
          description: 読書ステータス
          example: want
          enum:
          - want
          - done
        memo:
          type: string
          example: メモメモ
    Book:
      required:
      - id
      - page_count
      - published_at
      - title
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        title:
          type: string
          example: リーダブルコード
        description:
          type: string
          example: 読んでわかるコードの重要性と方法について解説
        image:
          type: string
        isbn_10:
          type: string
          example: "4873115655"
        isbn_13:
          type: string
          example: "9784873115658"
        page_count:
          type: integer
          example: 237
        published_at:
          type: string
          example: 2012-06
    UserBooksList:
      required:
      - book_id
      - user_id
      type: object
      properties:
        userbooks:
          type: array
          items:
            $ref: '#/components/schemas/UserBook'
        books:
          type: array
          items:
            $ref: '#/components/schemas/Book'
    UserBooksPageCount:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        page_count:
          type: integer
          example: 237
        published_at:
          type: string
          example: 2012-06
      example:
        id: 1
        published_at: 2012-06
        page_count: 237
    AccessToken:
      type: object
      properties:
        access_token:
          type: string
          example: b77yz37w7kzy8v5fuga6hoge
        expires_in:
          type: string
          example: "2345678"
        refresh_token:
          type: string
          format: time
          example: dm3yzerg24kzyfoo9v00lka
    inline_response_200:
      type: object
      properties:
        id:
          type: integer
          description: UserBook Id
          example: 1
        name:
          type: string
          description: UserBook Name
          example: test user
      example:
        name: test user
        id: 1
    inline_response_200_1:
      allOf:
      - $ref: '#/components/schemas/UserBooksList'
    ? ""
    : title: 読書量
      type: object
      properties:
        userbooks:
          $ref: '#/components/schemas/UserBooksPageCount'
      example:
        userbooks:
          id: 1
          published_at: 2012-06
          page_count: 237
  responses:
    SignInResponse: {}
    GoogleBooksAPIResponse: {}
  parameters: {}
